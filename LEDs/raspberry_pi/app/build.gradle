/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'com.github.sherter.google-java-format' version '0.9'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()

    maven {
        url "https://frcmaven.wpi.edu/artifactory/release/"
    }
}

dependencies {
    implementation 'com.fazecast:jSerialComm:2.10.4'
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation "edu.wpi.first.ntcore:ntcore-java:2024.2.1"
    implementation "edu.wpi.first.wpiutil:wpiutil-java:2024.2.1"
    runtimeOnly "edu.wpi.first.ntcore:ntcore-jni:2024.2.1:windowsx86-64"
    runtimeOnly "edu.wpi.first.ntcore:ntcore-jni:2024.2.1:linuxx86-64"
}

application {
    // Define the main class for the application.
    mainClass = 'shockwave.leds.LEDs'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    manifest {
        attributes 'Main-Class': application.mainClass
    }
}

googleJavaFormat {
    toolVersion = '1.19.2'
}

assemble.dependsOn(tasks.googleJavaFormat)

task copyMusic(type: JavaExec) {
    group = "Execution"
    description = "Copy .wav files from Robot/src/main/deploy/songs into LEDs/raspberry_pi/app/build/classes/java/main/songs"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "shockwave.leds.CopyMusicTask"
}
jar.dependsOn(copyMusic)